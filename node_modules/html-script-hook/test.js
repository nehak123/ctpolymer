var fs = require ("fs");
var testtext = "<html>\n" +
"<title>Test</title>\n" +
"<body>\n" +
"This is a test\n" +
"</body>\n" +
"<script>\n" +
"console.log (\"this is a test.\\n\");\n" +
"</script>\n" +
"</html>";
var testtext = "<script>console.log ('test');\n</script>";
var testtext = "<script>/*\n * The `<template>` tag <script> contains any HTML and data binding for your element and the `<script>` tag contains the JavaScript definition of your element.\n */</script>";
var testtext = 
"<script>" +
"/**" +
" * An example Polymer element." +
" *" +
" * This element shows off all the features of Polymer. The general format of a Polymer element is:" +
" * ``` javascript" +
" <link rel=\"import\" href=\"bower_components/polymer/polymer.html\">" +
"" +
" <dom-module id=\"element-name\">" +
"    <style>" +
"    </style>" +
"    <template>     " +
"    </template>" +
"    <script>" +
"        Polymer({" +
"            is: 'element-name'" +
"        });" +
"    < /script>" +
"</dom-module>" +
" * ```" +
" * The `<style>` tag contains _internal_ element styling. For more details, see: [Polymer Styling](https://www.polymer-project.org/1.0/docs/devguide/styling.html)" +
" * We don't show off much styling here." +
" *" +
" * The `<template>` tag contains any HTML and data binding for your element and the `<script>` tag contains the JavaScript definition of your element." +
" *" +
" * For more on defining your custom element, check out [Polymer Registration and Lifecycle](https://www.polymer-project.org/1.0/docs/devguide/registering-elements.html)." +
" *" +
" * Note that [Sublime Text](http://www.sublimetext.com/) has a number of handy " +
" * [Snippets for Polymer](https://packagecontrol.io/packages/Polymer%20%26%20Web%20Component%20Snippets) " +
" * that enable you to quickly create your own Polymer Element by just typing `pe` followed by the tab key. " +
" * And I just noticed that the Snippets were created Rob Dodson, host of [Polycasts](https://www.youtube.com/playlist?list=PLOU2XLYxmsII5c3Mgw6fNYCzaWrsM3sMN)." +
" * Thanks Rob!" +
" * " +
" * Another way to get started is to use the [open-element-template](https://github.com/apowers313/open-element-template) which has all the base code in place" +
" * not just for a Polymer element, but for integrating [Web Component Tester](https://github.com/Polymer/web-component-tester), [Travis CI](https://travis-ci.org/), " +
" * [SauceLabs](https://saucelabs.com/), [YUIDoc](http://yui.github.io/yuidoc/), [customelements.io](https://customelements.io/), " +
" * [David DM](https://david-dm.org/), [Gitter](https://gitter.im/apowers313/open-element-template), and other open source services and features." +
" *" +
" * @class example-element" +
" */" +
"/**" +
" * @module Example Polymer Element" +
" */" +
"</script>";
// var testtext = fs.readFileSync("test/testHtml/complexPolymer.html", {encoding: "utf8"});
var testtext = "<script id=\"js-set-epic-spec\">(function setRefDom(win, doc, registryFile) {var edition = ((registryFile && registryFile.split('_')[0]) || 'domestic').toUpperCase(),host = doc.referrer.replace(/^http(?:s)?\:\/\/([\w\-\.]+).*$/i, '$1').toLowerCase();win[edition] = win[edition] || {};win[edition].adTargets = window[edition].adTargets || {};if (host.search(/^([\w\-]+\.)*money\.cnn\.com$/) >= 0) {win[edition].adTargets.refdom = 'money';} else if (host.search(/^([\w\-]+\.)*(www|us|edition|next)\.cnn\.com$/) >= 0) {win[edition].adTargets.refdom = 'cnn';} else if (host === 't.co') {win[edition].adTargets.refdom = 'twitter';} else if (host.search(/^([\w\-]+\.)*facebook\.com$/) >= 0) {win[edition].adTargets.refdom = 'facebook';} else if (host.search(/^([\w\-]+\.)*google\.\w{2,3}(\.\w\w)?$/) >= 0) {win[edition].adTargets.refdom = 'google';} else {win[edition].adTargets.refdom = 'other';}}(window, document, 'cnn_homepage'));</script>"

htp = require ("./index");
// console.log ("htp:", htp);
html = htp (testtext, {scriptCallback: gotScript, htmlCallback: gotHtml});

function gotScript (script, details) {
	console.log ("Got script callback:\n*-*-*-*-*-*\n\"" + script + "\"\n*-*-*-*-*-*\n");

	return "TESTING";
}

function gotHtml (html) {
	console.log ("Got html callback:\n*-*-*-*-*-*\n" + html + "\n*-*-*-*-*-*\n");
}